package TD3_Part.creatures;

import TD3_Part.main.Simulation;

/**
 * Interface ClientVIPPrioritaire repr√©sentant un client VIP prioritaire.
 * 
 * <p>Cette interface fournit une m√©thode par d√©faut pour g√©rer l'attente d'une cr√©ature VIP prioritaire.
 * Lorsqu'une cr√©ature attend, son moral est r√©duit en fonction du nombre d'attentes cons√©cutives.
 * Si le moral de la cr√©ature tombe √† z√©ro ou en dessous, elle meurt.</p>
 * 
 * <p>La m√©thode par d√©faut <code>attendre</code> effectue les actions suivantes :</p>
 * <ul>
 *   <li>Incr√©mente le compteur d'attente pour l'esp√®ce de la cr√©ature.</li>
 *   <li>Ajoute un √©v√©nement d'attente √† la simulation.</li>
 *   <li>R√©duit le moral de la cr√©ature en fonction du nombre d'attentes cons√©cutives.</li>
 *   <li>Fait hurler la cr√©ature.</li>
 *   <li>Si le moral de la cr√©ature est inf√©rieur ou √©gal √† z√©ro, ajoute un √©v√©nement de mort √† la simulation et incr√©mente le compteur de morts.</li>
 * </ul>
 * 
 * <p>Cette interface utilise les classes <code>Creature</code> et <code>Simulation</code> pour g√©rer les cr√©atures et les √©v√©nements de la simulation.</p>
 */
public interface ClientVIPPrioritaire {

    default void attendre() {
        if (this instanceof Creature creature) {
            Creature.compteurAttendreEspece.put(this.getClass(), Creature.compteurAttendreEspece.getOrDefault(this.getClass(), 0) + 1);
            Simulation.events += " - (üí§) " + creature.getNom() + " : attend (Moral : " + creature.getMoral() + " ‚Üí " + (creature.getMoral() - creature.getCompteurAttendre()) + " #ClientVIPPrioritaire (" + creature.getCompteurAttendre() + " attentes d'affil√©e)).\n";
            creature.setMoral(creature.getMoral() - creature.getCompteurAttendre());
            creature.hurler();
            if (creature.getMoral() <= 0) {
                Simulation.events += " - (‚ò†Ô∏è) " + creature.getNom() + " : mort.\n";
                Simulation.morts++;
                creature.trepasser();
            }
        }
    }

}
